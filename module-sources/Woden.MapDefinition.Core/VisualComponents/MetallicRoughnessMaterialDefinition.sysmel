namespace Woden definition: {
namespace MapDefinition definition: {

useNamespace: Woden Runtime.

class MetallicRoughnessMaterialDefinition superclass: MaterialDefinition; definition: {
    public field baseColorFactor type: Float32x4.
    public field emissionFactor type: Float32x3.
    public field occlusionFactor type: Float32.
    public field roughnessFactor type: Float32.
    public field metallicFactor type: Float32.

    public field baseColorTexture type: TextureDefinitionRef.
    public field emissionTexture type: TextureDefinitionRef.
    public field normalTexture type: TextureDefinitionRef.
    public field occlusionMetallicRougnessTexture type: TextureDefinitionRef.

    meta definition: {
        static method baseColorFactor: (baseColorFactor: Float32x4) ::=> MaterialDefinitionRef
            := MetallicRoughnessMaterialDefinition new
                baseColorFactor: baseColorFactor;
                upCastFor: MaterialDefinition.
    }.

    override method initialize => Void := {
        baseColorFactor := Float32x4(0.8f, 0.8f, 0.8f, 1.0f).
        emissionFactor := Float32x3 zeros.
        occlusionFactor := 1.0f.
        roughnessFactor := 0.55f.
        metallicFactor := 0.0f.
    }.

    override method accept: (visitor: LevelDefinitionVisitor ref) ::=> Void
        := visitor visitMetallicRougnessMaterialDefinition: self.

    override method isMetallicRoughnessMaterialDefinition => Boolean8
        := true.

    field runtimeMaterial type: MaterialRef.

    override method getOrCreateMaterialFor: (engine: EngineRef) ::=> MaterialRef := {
        runtimeMaterial ifNil: {
            let mat := (MetallicRoughnessMaterial for: engine)
                baseColorFactor: baseColorFactor;
                emissionFactor: emissionFactor;
                occlusionFactor: occlusionFactor;
                roughnessFactor: roughnessFactor;
                metallicFactor: metallicFactor;
                yourself.
            baseColorTexture ifNotNil: { mat baseColorTexture: (baseColorTexture getOrCreateTextureWithViewFor: engine) }.
            emissionTexture ifNotNil: { mat emissionTexture: (emissionTexture getOrCreateTextureWithViewFor: engine) }.
            normalTexture ifNotNil: { mat normalTexture: (normalTexture getOrCreateTextureWithViewFor: engine) }.
            occlusionMetallicRougnessTexture ifNotNil: {
                let textureWithView := occlusionMetallicRougnessTexture getOrCreateTextureWithViewFor: engine.
                mat
                    occlusionTexture: textureWithView;
                    metallicRoughnessTexture: textureWithView
            }.

            runtimeMaterial := mat upCastFor: Material
        }.

        runtimeMaterial
    }.
}.

compileTime constant MetallicRoughnessMaterialDefinitionRef := MetallicRoughnessMaterialDefinition rcRef.

}. ## namespace MapDefinition
}. ## namespace Woden
