namespace Woden definition: {
namespace MapDefinition definition: {

useNamespace: Stdn Math Geometry.
useNamespace: Stdn Math LinearAlgebra.
useNamespace: Woden Runtime.

class PolyhedronVisualComponent superclass: VisualComponent2d; definition: {
    public field faces type: Stdn Collections Vector(PolyhedronFacePtr).
    public field vertices type: Stdn Collections Vector(Float32x3).
    field boundingBox type: BoxF32.

    override method boundingBox => BoxF32
        := boundingBox.

    field renderable type: RenderablePtr.

    method getOrCreateRenderableFor: (engine: EnginePtr) parentTransform: (parentTransform: ReversibleAffineTransform3dF32 const ref) ::=> RenderablePtr := {
        renderable ifNotNil: {return: renderable}.

        let meshBuilder := engine _ newGenericMeshBuilder.
        faces do: {:each :: Void |
            each _ buildMeshFor: engine with: meshBuilder parentTransform: parentTransform
        }.
        meshBuilder _ computeTangentsBitangents.

        renderable := meshBuilder _ renderable
    }.

    override method createSceneNodeFor: (engine: EnginePtr) parentTransform: (parentTransform: ReversibleAffineTransform3dF32 const ref) ::=> SceneNodePtr := {
        let node := SpatialObjectNode sharedNew.
        node _
            renderable: (self getOrCreateRenderableFor: engine parentTransform: parentTransform).
        node upCastFor: SceneNode
    }.
}.

compileTime constant PolyhedronVisualComponentPtr := PolyhedronVisualComponent sharedPointer.

}. ## namespace MapDefinition
}. ## namespace Woden
