namespace Woden definition: {
namespace MapDefinition definition: {

useNamespace: Std Math Geometry.
useNamespace: Std Math LinearAlgebra.
useNamespace: Woden Runtime.

class BoxVisualComponent superclass: VisualComponent; definition: {
    public field box type: BoxF32.
    public field materialAttributes type: FaceMaterialAttributes.

    method material: (material: MaterialDefinitionPtr const ref) ::=> Void := {
        materialAttributes material: material
    }.

    override method boundingBox => BoxF32
        := box.

    field renderable type: RenderablePtr.

    method getOrCreateRenderableFor: (engine: EnginePtr) parentTransform: (parentTransform: ReversibleAffineTransform3dF32 const ref) ::=> RenderablePtr := {
        renderable ifNotNil: {return: renderable}.

        materialAttributes material ifNil: {
            renderable := engine _ resourceCache _ unitCubeRenderable.
            return: renderable
        }.

        let meshBuilder := engine _ newGenericMeshBuilder.
        meshBuilder _
            currentMaterial: (materialAttributes material _ getOrCreateMaterialFor: engine);
            currentTransform: self boundingBox reversibleTransformToConvertUnitBoxToMe;

    		addCubeWithWidth: 1.0 height: 1.0 depth: 1.0;

    		## Use a planar texture coordinates
    		planeTextureTransform: materialAttributes textureTransform withModelTransform: parentTransform;
    		computeTangentsBitangents.
        renderable := meshBuilder _ renderable
    }.

    override method createSceneNodeFor: (engine: EnginePtr) parentTransform: (parentTransform: ReversibleAffineTransform3dF32 const ref) ::=> SceneNodePtr := {
        let node := SpatialObjectNode rcNew.

        materialAttributes material ifNil: {
            let deformedCube := SpatialObjectNode rcNew.
            deformedCube _
                renderable: (self getOrCreateRenderableFor: engine parentTransform: parentTransform);
                transform: self boundingBox reversibleTransformToConvertUnitBoxToMe.
            node _ addChild: (deformedCube upCastFor: SceneNode).

        } ifNotNil: {
            node _
                renderable: (self getOrCreateRenderableFor: engine parentTransform: parentTransform).
        }.

        node upCastFor: SceneNode
    }.
}.

compileTime constant BoxVisualComponentPtr := BoxVisualComponent rcPointer.

}. ## namespace MapDefinition
}. ## namespace Woden
