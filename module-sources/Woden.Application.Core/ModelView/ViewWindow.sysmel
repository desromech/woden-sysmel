namespace Woden definition: {
namespace Application definition: {

useNamespace: Woden Runtime.
useNamespace: Std Graphics Core.

#**
 * I am a generic interface for a window that is used by a view.
 *#
class ViewWindow superclass: Std RCObject; definition: {
    protected field view type: ViewPtr.

    const inline method engine => EnginePtr const ref
        := view _ engine.

    const inline method view => ViewPtr const ref
        := view.

    virtual method defaultClearDepth => Float32
        := view _ defaultClearDepth.

    virtual method defaultClearStencil => UInt8
        := view _ defaultClearStencil.

    virtual method colorBufferFormat => PixelFormat
        := view _ colorBufferFormat.

    virtual method depthStencilFormat => PixelFormat
        := view _ depthStencilFormat.

    virtual method extent => UInt32x2
        := view _ initialExtent.

    virtual method isStereoRequested => Boolean8
        := view _ isStereoRequested.

    virtual method drawingSurfaceExtent => UInt32x2
        := self extent.

    virtual method validatePresentationSurfaces => Boolean8
        := true.

    virtual method openForView: (theView: ViewPtr const ref) ::=> Boolean8 := {
        view := theView.
        true
    }.

    virtual method getCurrentBackBufferLeftEye => FramebufferRef
        := FramebufferRef nil.

    virtual method getCurrentBackBufferRightEye => FramebufferRef
        := FramebufferRef nil.

    virtual method getDisplayRenderPass => RenderPassRef
        := RenderPassRef nil.

    virtual method toggleFullscreen => Void
        := void.

    virtual method commitSurfaces => Void := {

    }.

    virtual method close => Void := {

    }.
}.

compileTime constant ViewWindowPtr := ViewWindow rcPointer

}. ## End of namespace Application
}. ## End of namespace Woden
