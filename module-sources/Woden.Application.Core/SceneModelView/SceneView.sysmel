namespace Woden definition: {
namespace Application definition: {

useNamespace: Woden Runtime.
useNamespace: Stdn Graphics Core.
useNamespace: Stdn Graphics GUI.
useNamespace: Stdn Math Geometry.

#**
 * I am the model that lies underlying a Woden application.
 *#
class SceneView superclass: View; definition: {
    protected field currentExtent type: UInt32x2.

    method sceneModel => SceneModel pointer
        := model getPointer castTo: SceneModel pointer.

    method scene => ScenePtr
        := self sceneModel _ scene.

    method camera => CameraPtr
        := self sceneModel _ mainCamera.

    protected field sceneRenderingPipelineViewport type: SceneRenderingPipelineViewportPtr.

    method ensureRenderingViewportWithExtent: (requiredExtent: UInt32x2) ::=> Void := {
        sceneRenderingPipelineViewport ifNil: {
            sceneRenderingPipelineViewport := self sceneModel _ sceneRenderingPipeline _ createSceneRenderingPipelineViewport.
        }.

        sceneRenderingPipelineViewport _ extent: requiredExtent.
        currentExtent := requiredExtent.
    }.

    virtual method prepareViewCamera => Void := {

    }.

    override method buildWindowScene2DWith: (scene2DBuilder: Stdn Graphics Scene2D BuilderPtr const ref) ::=> Stdn Graphics Scene2D NodePtr := {
        self prepareViewCamera.
        self ensureRenderingViewportWithExtent: viewWindow _ extent.
        sceneRenderingPipelineViewport ifNil: {
            return: Stdn Graphics Scene2D NodePtr nil.
        }.

        let textureHandle := sceneRenderingPipelineViewport _ mainColorBufferTextureHandle.
        textureHandle ifNil: {
            return: Stdn Graphics Scene2D NodePtr nil.
        }.

        sceneRenderingPipelineViewport _
            camera: self camera;
            render.

        (scene2DBuilder _ blendingMode: BlendingMode Copy node: ((
		     scene2DBuilder _ texture: textureHandle rectangle: (RectangleF32 extent: (currentExtent castTo: Float32x2))
		) upCastFor: Stdn Graphics Scene2D Node))
            upCastFor: Stdn Graphics Scene2D Node
    }.
}.

compileTime constant SceneViewPtr := SceneView sharedPointer

}. ## End of namespace Application
}. ## End of namespace Woden
