namespace Woden definition: {
namespace Runtime definition: {

useNamespace: Std Graphics Core.

#**
 * I am a material that performs flat shading in a surface.
 *#
class UnlitMaterial superclass: Material; definition: {
    meta definition: {
        method for: (anEngine: EnginePtr const ref) ::=> UnlitMaterial rcPointer := {
            let result := UnlitMaterial rcNew.
            result _ initializeWithEngine: anEngine.
            result
        }.
    }.

    public field state type: Woden Shaders UnlitMaterialStateData.

    public field stateBinding type: ShaderResourceBindingsRef.
    public field texture type: TextureWithViewRef.

    public field doubleSided type: Boolean8.
    public field isTranslucent type: Boolean8.

    const inline method hasAlphaMask => Boolean8
        := state alphaCutoff > 0.

    const inline method baseColorFactor => Float32x4
        := state colorFactor.

    inline method colorFactor: (color: Float32x4) ::=> Void
        := state colorFactor: color.

    inline method alphaCutoff: (value: Float32) ::=> Void
        := state alphaCutoff: value.

    const inline method alphaCutoff => Float32
        := state alphaCutoff.

    override method initialize => Void := {
        state
            colorFactor: Float32x4 white
    }.

    method validTexture => TextureWithViewRef := {
        texture ifNil: {return: engine _ resourceCache _ whiteTexture}.
        texture
    }.

    override method activateWithSceneRenderingContext: (context: SceneRenderingContext ref) ::=> Boolean8
        := context activateUnlitMaterial: self.
}.

compileTime constant UnlitMaterialPtr := UnlitMaterial rcPointer.

}. ## End of namespace Runtime
}. ## End of namespace Woden
