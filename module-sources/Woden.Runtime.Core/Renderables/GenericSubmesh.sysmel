namespace Woden definition: {
namespace Runtime definition: {

useNamespace: Stdn Graphics Core.

#**
 * I am a mesh whose geometry data never changes in the GPU.
 *#
class GenericSubmesh definition: {
    public field vertexBinding type: VertexBindingPtr.
    public field vertexAttributeMask type: UInt32.

    public field indexBuffer type: BufferPtr.
    public field indexBufferOffset type: UIntPointer.
    public field indexBufferStride type: UIntPointer.
    public field material type: MaterialPtr.

    public field firstIndex type: UInt32.
    public field indexOrVertexCount type: UInt32.
    public field primitiveTopology type: PrimitiveTopology.

    method renderWithContext: (context: SceneRenderingContext ref) ::=> Void := {
        material isNil || vertexBinding isNil || indexOrVertexCount = 0 ifTrue: {return: void}.
        (context vertexAttributeMask: vertexAttributeMask; activateMaterial: material) ifFalse: { return: void }.

        context stateTracker _ useVertexBinding: vertexBinding.

        indexBuffer ifNil: {
            context stateTracker _
                primitiveTopology: primitiveTopology;
                drawArrays: indexOrVertexCount instanceCount: 1 firstVertex: 0 baseInstance: 0
        } ifNotNil: {
            context stateTracker _ useIndexBuffer: indexBuffer at: indexBufferOffset stride: indexBufferStride.

            context stateTracker _
                primitiveTopology: primitiveTopology;
    			drawElements: indexOrVertexCount instanceCount: 1 firstIndex: firstIndex baseVertex: 0 baseInstance: 0.
        }.
    }.
}.

}. ## End of namespace Runtime
}. ## End of namespace Woden
