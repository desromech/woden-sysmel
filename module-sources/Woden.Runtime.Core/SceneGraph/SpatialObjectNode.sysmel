namespace Woden definition: {
namespace Runtime definition: {

useNamespace: Stdn Math Geometry.

#**
 * I am a node that poses a local coordinate system that is associated with a model matrix in the GPU.
 *#
class SpatialObjectNode superclass: AbstractSpatialObjectNode; definition: {
    protected field objectState type: SpatialObjectPtr.
    protected field renderable type: RenderablePtr.
    protected field renderingSceneObjects type: RenderingSceneObjectList.

    override method initialize => Void := {
        objectState := SpatialObject sharedNew.
    }.

    override method localInternalBoundingBox => BoxF32
        := renderable
            ifNil: {BoxF32 empty}
            ifNotNil: { renderable _ localBoundingBox }.

    override const method getSkeletonPose => SkeletonPosePtr := {
        renderable ifNil: {return: SkeletonPosePtr nil}.

        renderable _ getSkeletonPose
    }.

    method visible => Boolean8
        := objectState _ visible.

    method visible: (aBoolean8: Boolean8) ::=> Void := {
        objectState _ visible: aBoolean8
    }.

    method color => Float32x4
        := objectState _ color.

    method color: (aColor: Float32x4) ::=> Void := {
        objectState _ color: aColor
    }.

    const inline method renderable => RenderablePtr const ref
        := renderable.

    inline method renderable: (theRenderable: RenderablePtr const ref) ::=> Void := {
        let layer := self sceneLayer.
        layer ifNotNil: {
            self removeRenderingSceneObjectsFromSceneLayer: layer _.
            renderingSceneObjects removeAll
        }.

        renderable := theRenderable.

        renderable ifNotNil: {
            renderingSceneObjects := renderable _ createRenderingSceneObjectsFor: (objectState upCastFor: AbstractSpatialObject).
            renderingSceneObjects do: {:each :: Void |
                each _ node: (self asWeakPointer upCastFor: SceneNode)
            }.

            layer ifNotNil: {
                self addRenderingSceneObjectsToSceneLayer: layer _.
            }.
        }.

        renderable _
    }.

    const override method isSpatialObjectNode => Boolean8
        := true.

    override method globalTransformChanged => Void := {
        super globalTransformChanged.
        renderingSceneObjects do: {:each :: Void |
            each _ transformChanged.
        }.
    }.

    override method addRenderingSceneObjectsToSceneLayer: (sceneLayer: SceneLayer ref) ::=> Void := {
        sceneLayer addRenderingSceneObjects: renderingSceneObjects.
    }.

    override method removeRenderingSceneObjectsFromSceneLayer: (sceneLayer: SceneLayer ref) ::=> Void := {
        sceneLayer removeRenderingSceneObjects: renderingSceneObjects.
    }.
}.

compileTime constant SpatialObjectNodePtr := SpatialObjectNode sharedPointer.

}. ## End of namespace Runtime
}. ## End of namespace Woden
