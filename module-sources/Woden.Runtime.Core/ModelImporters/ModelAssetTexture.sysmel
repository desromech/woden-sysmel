namespace Woden definition: {
namespace Assets definition: {

useNamespace: Woden Runtime.
useNamespace: Stdn Graphics Core.

#**
 * I am a texture in a model asset.
 *#
class ModelAssetTexture superclass: ModelAssetElement; definition: {
    public field image type: ModelAssetImagePtr.
    public field sampler type: ModelAssetSamplerPtr.

    field textureWithView type: TextureWithViewPtr.

    method setColorUsage => Void := {
        image ifNotNil: {
            image _ usageMode: ModelAssetImageUsageMode Color
        }
    }.

    method setNormalUsage => Void := {
        image ifNotNil: {
            image _ usageMode: ModelAssetImageUsageMode Normal
        }
    }.

    method setLinearUsage => Void := {
        image ifNotNil: {
            image _ usageMode: ModelAssetImageUsageMode Linear
        }
    }.

    method asTextureWithViewFor: (engine: EnginePtr const ref) ::=> TextureWithViewPtr := {
        image ifNil: {return: TextureWithViewPtr nil}.

        let textureData := image _ asTextureDataFor: engine.
        textureData ifNil: {return: TextureWithViewPtr nil}.

        let texture := image _ usageMode = ModelAssetImageUsageMode Color
            ifTrue: {engine _ renderingDevice _ createColorTextureWithData: textureData _}
            ifFalse: {engine _ renderingDevice _ createTextureWithData: textureData _}.
        texture ifNil: {return: TextureWithViewPtr nil}.

        texture _ asTextureWithView
    }.
}.

compileTime constant ModelAssetTexturePtr := ModelAssetTexture sharedPointer.

} ## End of namespace Assets
} ## End of namespace Woden
