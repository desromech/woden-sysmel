namespace Woden definition: {
namespace Assets definition: {

useNamespace: Woden Runtime.
useNamespace: Std Graphics Core.

#**
 * I am a metallic-roughness material in a model asset.
 *#
class ModelAssetMetallicRoughnessMaterial superclass: ModelAssetMaterial; definition: {
    override method initialize => Void := {
        baseColorFactor := Float32x4 white.
        metallicFactor := 0.0f.
        roughnessFactor := 0.55f.
    }.

    public field baseColorFactor type: Float32x4.
    public field baseColorTexture type: ModelAssetTexturePtr.

    public field metallicFactor type: Float32.
    public field roughnessFactor type: Float32.
    public field metallicRoughnessTexture type: ModelAssetTexturePtr.

    field renderingMaterial type: MaterialPtr.

    override method isMetallicRoughnessMaterial => Boolean8
        := true.

    override method asRenderingMaterialFor: (engine: EnginePtr const ref) ::=> MaterialPtr := {
        renderingMaterial ifNotNil: {return: renderingMaterial}.

        let convertedMaterial := MetallicRoughnessMaterial for: engine.

        convertedMaterial _
            doubleSided: doubleSided;
            isTranslucent: alphaMode = ModelAssetMaterialAlphaMode Blend.

        convertedMaterial _ state
            emissionFactor: Float32x4(emissionFactor, 1.0f);
            baseColorFactor: baseColorFactor;
            alphaCutoff: (alphaMode = ModelAssetMaterialAlphaMode Mask ifTrue: alphaCutoff ifFalse: 0.0f);
            metallicFactor: metallicFactor;
            roughnessFactor: roughnessFactor.

        baseColorTexture ifNotNil: {
            convertedMaterial _ baseColorTexture: (baseColorTexture _ asTextureWithViewFor: engine)
        }.

        emissionTexture ifNotNil: {
            convertedMaterial _ emissionTexture: (emissionTexture _ asTextureWithViewFor: engine)
        }.

        normalTexture ifNotNil: {
            convertedMaterial _ normalTexture: (normalTexture _ asTextureWithViewFor: engine)
        }.

        metallicRoughnessTexture ifNotNil: {
            convertedMaterial _ metallicRoughnessTexture: (metallicRoughnessTexture _ asTextureWithViewFor: engine)
        }.

        occlusionTexture ifNotNil: {
            convertedMaterial _ occlusionTexture: (occlusionTexture _ asTextureWithViewFor: engine)
        }.

        renderingMaterial := convertedMaterial upCastFor: Material
    }.
}.

compileTime constant ModelAssetMetallicRoughnessMaterialPtr := ModelAssetMetallicRoughnessMaterial rcPointer.

} ## End of namespace Assets
} ## End of namespace Woden
