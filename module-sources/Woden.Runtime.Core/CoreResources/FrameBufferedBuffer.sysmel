namespace Woden definition: {
namespace Runtime definition: {

useNamespace: Std Graphics Core.

#**
 * I keep track of a state tracker and its corresponding command list allocator in a per frame basis.
 *#
class FrameBufferedBuffer superclass: FrameBufferedRenderingResource; definition: {
    public field buffers type: (BufferRef array: FrameBufferingCount).

    method for: (anEngine: EngineRef const ref) createWithDescription: (description: BufferDescription const ref) ::=> Void
        := self for: anEngine createWithDescription: description initialData: nil.

    method for: (anEngine: EngineRef const ref) createWithDescription: (description: BufferDescription const ref) initialData: (initialData: Void const pointer) ::=> Void := {
        engine := anEngine.

        let device ref := engine renderingDevice.
        0 until: FrameBufferingCount do: {:i :: Void |
            buffers[i] := device createBuffer: description initialData: initialData.
        }
    }.

    method current => BufferRef const ref
        := buffers[self frameBufferingIndex].
}.

}. ## End of namespace Runtime
}. ## End of namespace Woden
