Compiler importModulesNamed: #(
    #"Woden.Application.SampleScene"
    #"Woden.Application.Headfull"
).

useNamespace: Woden Runtime.

Woden Application sampleSceneMainWith: {:model :: Void |
    let scene := model newScene.
    let engine := model engine.

    ## Setup the camera
    {
        let camera := model mainCamera.
        camera _ translateByX: 0.0 y: 1.0 z: 3.0.
    }.

    ## Build and add the cube to the scene.
    {
        let material := MetallicRoughnessMaterial for: engine.
        material _
            albedoTexture: (engine _ resourceCache _ loadColorTextureFrom: "resources/core-assets/textures/demos/tile-albedo.dds" asMutableString);
            normalTexture: (engine _ resourceCache _ loadTextureFrom: "resources/core-assets/textures/demos/tile-normal.dds" asMutableString);
            roughnessFactor: 0.45f.

        let meshBuilder := model engine _ newGenericMeshBuilder.
        meshBuilder _
            currentMaterial: (material upCastFor: Material);
            addCubeWithWidth: 10.0 height: 0.5 depth: 10.0;
    		planeTextureScale: Float32x2(2, 2) offset: Float32x2(2, 2);
    		computeTangentsBitangents.
        let renderable := meshBuilder _ renderable.

        let cube := SpatialObjectNode sharedNew.
        cube _ renderable: renderable.
        scene _ add: (cube upCastFor: SceneNode).
    }.

    ## Add the light source.
    {
        let light := LightSourceNode sharedNew.
        light _
            makePoint;
            radius: 4.0;
    		intensity: Float32x3(1.0f, 1.0f, 0.3f)* 0.8f;
    		translateByX: -1.5f y: 1.5f z: 1.6f.
        scene _ add: (light upCastFor: SceneNode).
    }.
}.
