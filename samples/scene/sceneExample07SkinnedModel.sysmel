Compiler importModulesNamed: #(
    #"Woden.Application.SampleScene"
    #"Woden.Application.Headfull"
).

useNamespace: Woden Runtime.

Woden Application sampleSceneMainWith: {:model :: Void |
    let scene := model newScene.
    scene _
        backgroundColor: Float32x4(0.01f, 0.01f, 0.01f, 1.0f);
        backgroundLighting: Float32x3(0.03f, 0.03f, 0.03f).

    ## Setup the camera
    {
        let camera := model mainCamera.
        camera _ translateByZ: 3.0; translateByY: 1.6.
    }.

    ## Build the floor.
    {
        let meshBuilder := model engine _ newGenericMeshBuilder.
        meshBuilder _
            addCubeWithWidth: 10.0 height: 0.5 depth: 10.0.
        let renderable := meshBuilder _ renderable.

        let floor := SpatialObjectNode sharedNew.
        floor _
            renderable: renderable;
            translateByY: -0.25f.
        scene _ add: (floor upCastFor: SceneNode).
    }.

    ## Add the fox sample model
    {
        let modelAsset := model engine _ resourceCache _ loadModelAssetFrom: "models/glTF-Samples/Fox/glTF/Fox" asNativeFileReference.
        modelAsset ifNotNil: {
            let foxNode := modelAsset _  createSceneNodeNamed: "fox" asMutableString for: model engine.
            foxNode _
                scaleBy: 0.015f;
                rotateDegreesOnY: 90;
                translateByY: foxNode _ boundingBox min y negated.
            scene _ add: foxNode.
        }.
    }.

    ## Add the light source.
    {
        let light := LightSourceNode sharedNew.
        light _
            makeSpot;
            radius: 10.0;
            intensity: Float32x3(1.0f, 1.0f, 0.9f)*1.5f;
            spotOuterCutoff: 65.0f;
            spotInnerCutoff: 60.0f;
            castShadows: true;
            lookAtBottom;
            rotateDegreesOnX: 45;
            translateByX: 0.0f y: 2.0f z: 1.0f.
        scene _ add: (light upCastFor: SceneNode).
    }.
}.
