Compiler importModulesNamed: #(
    #"Woden.Application.SampleScene"
    #"Woden.Application.Headfull"
).

useNamespace: Woden Runtime.

Woden Application sampleSceneMainWith: {:model :: Void |
    let scene := model newScene.
    scene _
        backgroundColor: Float32x4 black;
        backgroundLighting: 0.2f.

    ## Setup the camera
    {
        let camera := model mainCamera.
        camera _
            exposure: 0.25f;
            toneMappingOperator: ToneMappingOperator Filmic;
            withAutoExposure;
            translateByY: 1.6.
    }.

    ## Load the sponza model
    {
        let modelAsset := model engine _ resourceCache _ loadModelAssetFrom: "models/glTF-Samples/Sponza/glTF/Sponza" asNativeFileReference.
        modelAsset ifNotNil: {
            modelAsset _ scenes first _ createSceneNodesFor: model engine in: scene
        }.
    }.

    ## Add the moon light
    {
        let moonLight := LightSourceNode sharedNew.
        moonLight _
            makeDirectional;
            intensity: (Float32x3 x: 1.0f y: 1.0f z: 0.8f) normalized * 1.5f;
            rotateDegreesOnX: -35.
        scene _ add: (moonLight upCastFor: SceneNode).
    }.

    ## Add the torch lights
    {
        let torchLightPositions mutable := Float32x3 array(
            Float32x3 x: 3.9f y: 1.3f z: 1.18f,
            Float32x3 x: 3.9f y: 1.3f z: -1.72f,
            Float32x3 x: -4.95f y: 1.3f z: 1.18f,
            Float32x3 x: -4.95f y: 1.3f z: -1.72f
        ).
        torchLightPositions do: {:position :: Void |
            let light := LightSourceNode sharedNew.
            light _
                makePoint;
                radius: 20.0f;
                intensity: Float32x3(1.0f, 1.0f, 0.9f)*15.0f;
                translateTo: position.
            scene _ add: (light upCastFor: SceneNode).
        }.
    }.
}.
